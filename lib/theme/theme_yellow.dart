import "package:flutter/material.dart";
import "package:lime/theme/theme_brown.dart";

class MaterialThemeYellow {
  final TextTheme textTheme;

  const MaterialThemeYellow(this.textTheme);

  static MaterialScheme lightScheme() {
    return const MaterialScheme(
      brightness: Brightness.light,
      primary: Color(0xff6b5e10),
      surfaceTint: Color(0xff6b5e10),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xfff6e388),
      onPrimaryContainer: Color(0xff211b00),
      secondary: Color(0xff655f40),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffede3bc),
      onSecondaryContainer: Color(0xff201c04),
      tertiary: Color(0xff426650),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffc4ecd0),
      onTertiaryContainer: Color(0xff002111),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff410002),
      background: Color(0xfffff9ec),
      onBackground: Color(0xff1e1c13),
      surface: Color(0xfffff9ec),
      onSurface: Color(0xff1e1c13),
      surfaceVariant: Color(0xffe9e2d0),
      onSurfaceVariant: Color(0xff4a4739),
      outline: Color(0xff7c7768),
      outlineVariant: Color(0xffccc6b4),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff333027),
      inverseOnSurface: Color(0xfff6f0e2),
      inversePrimary: Color(0xffd9c76f),
      primaryFixed: Color(0xfff6e388),
      onPrimaryFixed: Color(0xff211b00),
      primaryFixedDim: Color(0xffd9c76f),
      onPrimaryFixedVariant: Color(0xff524700),
      secondaryFixed: Color(0xffede3bc),
      onSecondaryFixed: Color(0xff201c04),
      secondaryFixedDim: Color(0xffd0c7a2),
      onSecondaryFixedVariant: Color(0xff4d472b),
      tertiaryFixed: Color(0xffc4ecd0),
      onTertiaryFixed: Color(0xff002111),
      tertiaryFixedDim: Color(0xffa8d0b5),
      onTertiaryFixedVariant: Color(0xff2a4e39),
      surfaceDim: Color(0xffdfdacc),
      surfaceBright: Color(0xfffff9ec),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff9f3e5),
      surfaceContainer: Color(0xfff4eddf),
      surfaceContainerHigh: Color(0xffeee8da),
      surfaceContainerHighest: Color(0xffe8e2d4),
    );
  }

  ThemeData light() {
    return theme(lightScheme().toColorScheme());
  }

  static MaterialScheme lightMediumContrastScheme() {
    return const MaterialScheme(
      brightness: Brightness.light,
      primary: Color(0xff4d4300),
      surfaceTint: Color(0xff6b5e10),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff837526),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff494327),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff7c7555),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff264a35),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff587d65),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff8c0009),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffda342e),
      onErrorContainer: Color(0xffffffff),
      background: Color(0xfffff9ec),
      onBackground: Color(0xff1e1c13),
      surface: Color(0xfffff9ec),
      onSurface: Color(0xff1e1c13),
      surfaceVariant: Color(0xffe9e2d0),
      onSurfaceVariant: Color(0xff464336),
      outline: Color(0xff635f51),
      outlineVariant: Color(0xff7f7b6b),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff333027),
      inverseOnSurface: Color(0xfff6f0e2),
      inversePrimary: Color(0xffd9c76f),
      primaryFixed: Color(0xff837526),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff695c0d),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff7c7555),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff635c3e),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff587d65),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff40644e),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffdfdacc),
      surfaceBright: Color(0xfffff9ec),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff9f3e5),
      surfaceContainer: Color(0xfff4eddf),
      surfaceContainerHigh: Color(0xffeee8da),
      surfaceContainerHighest: Color(0xffe8e2d4),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme().toColorScheme());
  }

  static MaterialScheme lightHighContrastScheme() {
    return const MaterialScheme(
      brightness: Brightness.light,
      primary: Color(0xff282200),
      surfaceTint: Color(0xff6b5e10),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff4d4300),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff272209),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff494327),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff022816),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff264a35),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff4e0002),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff8c0009),
      onErrorContainer: Color(0xffffffff),
      background: Color(0xfffff9ec),
      onBackground: Color(0xff1e1c13),
      surface: Color(0xfffff9ec),
      onSurface: Color(0xff000000),
      surfaceVariant: Color(0xffe9e2d0),
      onSurfaceVariant: Color(0xff272418),
      outline: Color(0xff464336),
      outlineVariant: Color(0xff464336),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff333027),
      inverseOnSurface: Color(0xffffffff),
      inversePrimary: Color(0xffffed95),
      primaryFixed: Color(0xff4d4300),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff342d00),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff494327),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff322d13),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff264a35),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff0f3320),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffdfdacc),
      surfaceBright: Color(0xfffff9ec),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff9f3e5),
      surfaceContainer: Color(0xfff4eddf),
      surfaceContainerHigh: Color(0xffeee8da),
      surfaceContainerHighest: Color(0xffe8e2d4),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme().toColorScheme());
  }

  static MaterialScheme darkScheme() {
    return const MaterialScheme(
      brightness: Brightness.dark,
      primary: Color(0xffd9c76f),
      surfaceTint: Color(0xffd9c76f),
      onPrimary: Color(0xff383000),
      primaryContainer: Color(0xff524700),
      onPrimaryContainer: Color(0xfff6e388),
      secondary: Color(0xffd0c7a2),
      onSecondary: Color(0xff363016),
      secondaryContainer: Color(0xff4d472b),
      onSecondaryContainer: Color(0xffede3bc),
      tertiary: Color(0xffa8d0b5),
      onTertiary: Color(0xff133724),
      tertiaryContainer: Color(0xff2a4e39),
      onTertiaryContainer: Color(0xffc4ecd0),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      background: Color(0xff15130c),
      onBackground: Color(0xffe8e2d4),
      surface: Color(0xff15130c),
      onSurface: Color(0xffe8e2d4),
      surfaceVariant: Color(0xff4a4739),
      onSurfaceVariant: Color(0xffccc6b4),
      outline: Color(0xff969180),
      outlineVariant: Color(0xff4a4739),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe8e2d4),
      inverseOnSurface: Color(0xff333027),
      inversePrimary: Color(0xff6b5e10),
      primaryFixed: Color(0xfff6e388),
      onPrimaryFixed: Color(0xff211b00),
      primaryFixedDim: Color(0xffd9c76f),
      onPrimaryFixedVariant: Color(0xff524700),
      secondaryFixed: Color(0xffede3bc),
      onSecondaryFixed: Color(0xff201c04),
      secondaryFixedDim: Color(0xffd0c7a2),
      onSecondaryFixedVariant: Color(0xff4d472b),
      tertiaryFixed: Color(0xffc4ecd0),
      onTertiaryFixed: Color(0xff002111),
      tertiaryFixedDim: Color(0xffa8d0b5),
      onTertiaryFixedVariant: Color(0xff2a4e39),
      surfaceDim: Color(0xff15130c),
      surfaceBright: Color(0xff3c3930),
      surfaceContainerLowest: Color(0xff100e07),
      surfaceContainerLow: Color(0xff1e1c13),
      surfaceContainer: Color(0xff222017),
      surfaceContainerHigh: Color(0xff2c2a21),
      surfaceContainerHighest: Color(0xff37352b),
    );
  }

  ThemeData dark() {
    return theme(darkScheme().toColorScheme());
  }

  static MaterialScheme darkMediumContrastScheme() {
    return const MaterialScheme(
      brightness: Brightness.dark,
      primary: Color(0xffddcb73),
      surfaceTint: Color(0xffd9c76f),
      onPrimary: Color(0xff1b1600),
      primaryContainer: Color(0xffa09140),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xffd4cba6),
      onSecondary: Color(0xff1a1602),
      secondaryContainer: Color(0xff99916f),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xffacd4b9),
      onTertiary: Color(0xff001b0d),
      tertiaryContainer: Color(0xff749980),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffbab1),
      onError: Color(0xff370001),
      errorContainer: Color(0xffff5449),
      onErrorContainer: Color(0xff000000),
      background: Color(0xff15130c),
      onBackground: Color(0xffe8e2d4),
      surface: Color(0xff15130c),
      onSurface: Color(0xfffffaf4),
      surfaceVariant: Color(0xff4a4739),
      onSurfaceVariant: Color(0xffd1cab9),
      outline: Color(0xffa8a392),
      outlineVariant: Color(0xff888373),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe8e2d4),
      inverseOnSurface: Color(0xff2c2a21),
      inversePrimary: Color(0xff534800),
      primaryFixed: Color(0xfff6e388),
      onPrimaryFixed: Color(0xff151100),
      primaryFixedDim: Color(0xffd9c76f),
      onPrimaryFixedVariant: Color(0xff3f3600),
      secondaryFixed: Color(0xffede3bc),
      onSecondaryFixed: Color(0xff151100),
      secondaryFixedDim: Color(0xffd0c7a2),
      onSecondaryFixedVariant: Color(0xff3c361c),
      tertiaryFixed: Color(0xffc4ecd0),
      onTertiaryFixed: Color(0xff001509),
      tertiaryFixedDim: Color(0xffa8d0b5),
      onTertiaryFixedVariant: Color(0xff193d29),
      surfaceDim: Color(0xff15130c),
      surfaceBright: Color(0xff3c3930),
      surfaceContainerLowest: Color(0xff100e07),
      surfaceContainerLow: Color(0xff1e1c13),
      surfaceContainer: Color(0xff222017),
      surfaceContainerHigh: Color(0xff2c2a21),
      surfaceContainerHighest: Color(0xff37352b),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme().toColorScheme());
  }

  static MaterialScheme darkHighContrastScheme() {
    return const MaterialScheme(
      brightness: Brightness.dark,
      primary: Color(0xfffffaf4),
      surfaceTint: Color(0xffd9c76f),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffddcb73),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xfffffaf4),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xffd4cba6),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xffeefff1),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xffacd4b9),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xfffff9f9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffbab1),
      onErrorContainer: Color(0xff000000),
      background: Color(0xff15130c),
      onBackground: Color(0xffe8e2d4),
      surface: Color(0xff15130c),
      onSurface: Color(0xffffffff),
      surfaceVariant: Color(0xff4a4739),
      onSurfaceVariant: Color(0xfffffaf4),
      outline: Color(0xffd1cab9),
      outlineVariant: Color(0xffd1cab9),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe8e2d4),
      inverseOnSurface: Color(0xff000000),
      inversePrimary: Color(0xff312a00),
      primaryFixed: Color(0xfffae78c),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffddcb73),
      onPrimaryFixedVariant: Color(0xff1b1600),
      secondaryFixed: Color(0xfff1e7c0),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffd4cba6),
      onSecondaryFixedVariant: Color(0xff1a1602),
      tertiaryFixed: Color(0xffc8f1d4),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xffacd4b9),
      onTertiaryFixedVariant: Color(0xff001b0d),
      surfaceDim: Color(0xff15130c),
      surfaceBright: Color(0xff3c3930),
      surfaceContainerLowest: Color(0xff100e07),
      surfaceContainerLow: Color(0xff1e1c13),
      surfaceContainer: Color(0xff222017),
      surfaceContainerHigh: Color(0xff2c2a21),
      surfaceContainerHighest: Color(0xff37352b),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme().toColorScheme());
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
        useMaterial3: true,
        brightness: colorScheme.brightness,
        colorScheme: colorScheme,
        textTheme: textTheme.apply(
          bodyColor: colorScheme.onSurface,
          displayColor: colorScheme.onSurface,
        ),
        scaffoldBackgroundColor: colorScheme.surface,
        canvasColor: colorScheme.surface,
      );

  List<ExtendedColor> get extendedColors => [];
}
